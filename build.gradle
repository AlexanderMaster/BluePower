buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

def isDev = false
major = "0"
minor = "0"
getBuildNumber
version = "1.7.2-" + major + "." + minor + "." + ${System.getenv("BUILD_NUMBER")
group= "net.quetzi.bluepower" 
archivesBaseName = "bluepower"

minecraft {
    version = "1.7.2-10.12.1.1084"
    assetDir = "eclipse/assets"
	// replacing stuff in the source
	replace '@MAJOR@', project.major
	replace '@MINOR@', project.minor
	replace '@MC_VERSION@', version
	if(isDev){
		replace '@BUILD_NUMBER@', "DEV-$${System.getenv("BUILD_NUMBER")"
	}else{
		replace '@BUILD_NUMBER@', project.buildNum
	}
}

task release << {
    println("Building release of ${project.archivesBaseName} with buildNumber ${System.getenv("BUILD_NUMBER")")
    isDev = false
}

task dev << {
    println("Building dev version of ${project.archivesBaseName} with buildNumber DEV-${System.getenv("BUILD_NUMBER")")
    isDev = true
}

task whatIsDev << {
    if(isDev){
        println("FUCKING YAY")
    }else{
        println("NOPE YOU BASTARD")
    }
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'java'
                // exclude 'some exclusion'
                // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
                exclude '**/.md' // exclude readme from localization repo
                // exclude 'some exclusion'
                // include 'some inclusion'
        }
    }
}
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

	if(isDev){
        inputs.property "buildNum","DEV-${System.getenv("BUILD_NUMBER")"
    }else{
        inputs.property "buildNum", project.ext.buildNum
    } 
	
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
       if(isDev){
            expand 'version':project.version, 'mcversion':project.minecraft.version, 'buildNum':"DEV-${System.getenv("BUILD_NUMBER")"
        }else{
            expand 'version':project.version, 'mcversion':project.minecraft.version, 'buildNum':${System.getenv("BUILD_NUMBER")
        }
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
jar {
        if(isDev){
            classifier = "DEV-${System.getenv("BUILD_NUMBER")"
        }else{
            classifier = ${System.getenv("BUILD_NUMBER")
        }
    }
}
